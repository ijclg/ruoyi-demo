# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: build-and-deploy

on:
  push:
    branches:
      - main

jobs:
  build-server:
    runs-on: ubuntu-latest
    env:
      PROJECT : ruoyi-admin
      DEPLOYPATH: /www/wwwroot
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B package

    - name: SSH Server Deploy
      uses: kostya-ten/ssh-server-deploy@v4
      with:
          host: ${{ secrets.TENCENT_SERVER_HOST }}
          port: ${{ secrets.TENCENT_SERVER_PORT }}
          username: ${{ secrets.TENCENT_SERVER_USERNAME }}
          private_key: ${{ secrets.TENCENT_PRIVATE_KEY }}
          scp_source: ./build/*
          scp_target: ${{ env.DEPLOYPATH }}
          before_script: |
            ls -lh
          after_script: |
            echo ${{ env.DEPLOYPATH }}/${{ env.PROJECT }}
            sh ${{ env.DEPLOYPATH }}/${{ env.PROJECT }}/ry.sh restart
  
  build-ui:
    runs-on: ubuntu-latest
    env:
      PROJECT: ruoyi-ui
      DEPLOYPATH: /www/wwwroot
    steps:
    - uses: actions/checkout@v3
    - name: set up node
      uses: actions/setup-node@v1
      with:
        node-version: '14'
        cache: 'npm'
    - name: build
      run: |
           cd ./${{ env.PROJECT }}
           npm install
           npm run build:prod
    - name: SSH Server Deploy
      uses: kostya-ten/ssh-server-deploy@v4
      with:
        host: ${{ secrets.TENCENT_SERVER_HOST }}
        port: ${{ secrets.TENCENT_SERVER_PORT }}
        username: ${{ secrets.TENCENT_SERVER_USERNAME }}
        private_key: ${{ secrets.TENCENT_PRIVATE_KEY }}
        scp_source: ./build/*
        scp_target: ${{ env.DEPLOYPATH }}
        before_script: |
          ps -ef
        after_script: |
          nginx -s reload
#  deploy-job:
#    runs-on: ubuntu-latest
#    needs: [build-server, build-ui]
#    steps:
#    - name: SSH Server Deploy
#      uses: kostya-ten/ssh-server-deploy@v4
#      with:
#        host: ${{ secrets.TENCENT_SERVER_HOST }}
#        port: ${{ secrets.TENCENT_SERVER_PORT }}
#        username: ${{ secrets.TENCENT_SERVER_USERNAME }}
#        private_key: ${{ secrets.TENCENT_PRIVATE_KEY }}
#        scp_source: ./dist/*
#        scp_target: /www/wwwroot
#        before_script: |
#          df -h
#        after_script: |
#          cd /www/wwwroot
#          ls -l
